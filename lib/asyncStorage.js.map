{"version":3,"sources":["../src/asyncStorage.js"],"names":["execute","operation","cb","callback","_error","_result","undefined","e","first","list","predicate","item","Error","AsyncStorage","getItem","key","setItem","value","removeItem","mergeItem","JSON","parse","clear","Object","keys","getAllKeys","flushGetRequests","multiGet","entries","multiSet","kvPairs","reduce","previous","multiRemove","multiMerge","map","_","key_"],"mappings":"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","sourcesContent":["import {getData, removeData, setData} from \"./themis\"\n\nconst execute = async (operation, cb) => {\n    const callback = cb || ((_error, _result) => {})\n    try {\n        callback(undefined, await operation())\n    } catch (e) {\n        callback(e, undefined)\n        throw e\n    }\n}\n\nconst first = (list, predicate) => {\n    for (const item of list) {\n        if (predicate(item)) {\n            return item\n        }\n    }\n    throw new Error(\"No item matched predicate\")\n}\n\nexport class AsyncStorage {\n    static async getItem(key, cb = undefined) {\n        return execute(async () => await getData(key), cb)\n    }\n\n    static async setItem(key, value, cb = undefined) {\n        return execute(async () => await setData({[key]: value}), cb)\n    }\n\n    static async removeItem(key, cb = undefined) {\n        return execute(async () => await removeData(key), cb)\n    }\n\n    static async mergeItem(key, value, cb = undefined) {\n        return execute(\n            async () =>\n                await setData({\n                    [key]: {...(await getData(key)), ...JSON.parse(value)}\n                }),\n            cb\n        )\n    }\n\n    static async clear(cb = undefined) {\n        return execute(\n            async () => await removeData(...Object.keys(await getData())),\n            cb\n        )\n    }\n\n    static async getAllKeys(cb = undefined) {\n        return execute(async () => Object.keys(await getData()), cb)\n    }\n\n    static flushGetRequests() {\n        // TODO\n    }\n\n    static async multiGet([...keys], cb = undefined) {\n        return execute(async () => Object.entries(await getData(keys)), cb)\n    }\n\n    static async multiSet([...kvPairs], cb = undefined) {\n        return execute(\n            async () =>\n                await setData(\n                    kvPairs.reduce(\n                        ({...previous}, [key, value]) => ({\n                            ...previous,\n                            [key]: value\n                        }),\n                        {}\n                    )\n                ),\n            cb\n        )\n    }\n\n    static async multiRemove([...keys], cb = undefined) {\n        return execute(async () => await removeData(...keys), cb)\n    }\n\n    static async multiMerge([...kvPairs], cb = undefined) {\n        return execute(\n            async () =>\n                Object.entries(\n                    await getData(...kvPairs.map(([key, _]) => key))\n                ).reduce(({...previous}, [key, {...value}]) => ({\n                    ...previous,\n                    [key]: {\n                        ...value,\n                        ...first(kvPairs, ([key_, _]) => key_ === key)[1] // key, value\n                    }\n                })),\n            cb\n        )\n    }\n}\n"],"file":"asyncStorage.js"}